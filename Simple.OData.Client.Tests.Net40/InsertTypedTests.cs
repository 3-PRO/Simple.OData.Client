using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Linq;
using Xunit;

using Entry = System.Collections.Generic.Dictionary<string, object>;

namespace Simple.OData.Client.Tests
{
    public class InsertTypedTests : TestBase
    {
        [Fact]
        public void Insert()
        {
            var product = _client
                .For<Product>()
                .Set(new { ProductName = "Test1", UnitPrice = 18m })
                .InsertEntry();

            Assert.Equal("Test1", product.ProductName);
        }

        [Fact]
        public void InsertAutogeneratedID()
        {
            var product = _client
                .For<Product>()
                .Set(new { ProductName = "Test1", UnitPrice = 18m })
                .InsertEntry();

            Assert.True(product.ProductID > 0);
            Assert.Equal("Test1", product.ProductName);
        }

        [Fact]
        public void InsertProductWithCategoryByID()
        {
            var category = _client
                .For<Category>()
                .Set(new { CategoryName = "Test3" })
                .InsertEntry();
            var product = _client
                .For<Product>()
                .Set(new { ProductName = "Test4", UnitPrice = 18m, CategoryID = category.CategoryID })
                .InsertEntry();

            Assert.Equal("Test4", product.ProductName);
            Assert.Equal(category.CategoryID, product.CategoryID);
            category = _client
                .For<Category>()
                .Expand(x => new { x.Products })
                .Filter(x => x.CategoryName == "Test3")
                .FindEntry();
            Assert.True(category.Products.Count() == 1);
        }

        [Fact]
        public void InsertProductWithCategoryByAssociation()
        {
            var category = _client
                .For<Category>()
                .Set(new { CategoryName = "Test5" })
                .InsertEntry();
            var product = _client
                .For<Product>()
                .Set(new { ProductName = "Test6", UnitPrice = 18m, Category = category })
                .InsertEntry();

            Assert.Equal("Test6", product.ProductName);
            Assert.Equal(category.CategoryID, product.CategoryID);
            category = _client
                .For<Category>()
                .Expand(x => new { x.Products })
                .Filter(x => x.CategoryName == "Test5")
                .FindEntry();
            Assert.True(category.Products.Count() == 1);
        }
    }
}
