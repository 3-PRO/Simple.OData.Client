using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Linq;
using Xunit;

using Entry = System.Collections.Generic.Dictionary<string, object>;

namespace Simple.OData.Client.Tests
{
    public class InsertTests : TestBase
    {
        [Fact]
        public void Insert()
        {
            var product = _client
                .For("Products")
                .Set(new Entry() { { "ProductName", "Test1" }, { "UnitPrice", 18m } })
                .InsertEntry();

            Assert.Equal("Test1", product["ProductName"]);
        }

        [Fact]
        public void InsertAutogeneratedID()
        {
            var product = _client
                .For("Products")
                .Set(new { ProductName = "Test1", UnitPrice = 18m })
                .InsertEntry();

            Assert.True((int)product["ProductID"] > 0);
            Assert.Equal("Test1", product["ProductName"]);
        }

        [Fact]
        public void InsertExpando()
        {
            dynamic expando = new ExpandoObject();
            expando.ProductName = "Test9";
            expando.UnitPrice = 18m;

            var product = _client
                .For("Products")
                .Set(expando)
                .InsertEntry();

            Assert.True((int)product["ProductID"] > 0);
        }

        [Fact]
        public void InsertProductWithCategoryByID()
        {
            var category = _client
                .For("Categories")
                .Set(new { CategoryName = "Test3" })
                .InsertEntry(true);
            var product = _client
                .For("Products")
                .Set(new { ProductName = "Test4", UnitPrice = 18m, CategoryID = category["CategoryID"] })
                .InsertEntry();

            Assert.Equal("Test4", product["ProductName"]);
            Assert.Equal(category["CategoryID"], product["CategoryID"]);
            category = _client
                .For("Categories")
                .Expand("Products")
                .Filter("CategoryName eq 'Test3'")
                .FindEntry();
            Assert.True((category["Products"] as IEnumerable<object>).Count() == 1);
        }

        [Fact]
        public void InsertProductWithCategoryByAssociation()
        {
            var category = _client
                .For("Categories")
                .Set(new { CategoryName = "Test5" })
                .InsertEntry();
            var product = _client
                .For("Products")
                .Set(new { ProductName = "Test6", UnitPrice = 18m, Category = category })
                .InsertEntry();

            Assert.Equal("Test6", product["ProductName"]);
            Assert.Equal(category["CategoryID"], product["CategoryID"]);
            category = _client
                .For("Categories")
                .Expand("Products")
                .Filter("CategoryName eq 'Test5'")
                .FindEntry();
            Assert.True((category["Products"] as IEnumerable<object>).Count() == 1);
        }
    }
}
