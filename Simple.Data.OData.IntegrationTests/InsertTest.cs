using System;
using System.Collections.Generic;
using System.Dynamic;
using System.Linq;
using System.Text;

namespace Simple.Data.OData.IntegrationTests
{
    using Xunit;

    public class InsertTest : TestBase
    {
        [Fact]
        public void Insert()
        {
            var product = _db.Products.Insert(ProductName: "Test1", UnitPrice: 18m);

            Assert.Equal("Test1", product.ProductName);
        }

        [Fact]
        public void InsertAutogeneratedID()
        {
            var product = _db.Products.Insert(ProductName: "Test2", UnitPrice: 18m);

            Assert.True(product.ProductID > 0);
        }

        [Fact]
        public void InsertObject()
        {
            var expando = new ExpandoObject();
            var properties = expando as IDictionary<String, object>;
            properties["ProductName"] = "Test9";
            properties["UnitPrice"] = 18m;
            var product = _db.Products.Insert(expando);

            Assert.True(product.ProductID > 0);
        }

        [Fact]
        public void InsertProductWithCategoryByID()
        {
            var category = _db.Categories.Insert(CategoryName: "Test3");
            var product = _db.Products.Insert(ProductName: "Test4", UnitPrice: 18m, CategoryID: category.CategoryID);

            Assert.Equal("Test4", product.ProductName);
            Assert.Equal(category.CategoryID, product.CategoryID);
            category = _db.Category.WithProducts().FindByCategoryName("Test3");
            Assert.True(category.Products.Count == 1);
        }

        [Fact]
        public void InsertProductWithCategoryByAssociation()
        {
            var category = _db.Categories.Insert(CategoryName: "Test5");
            var product = _db.Products.Insert(ProductName: "Test6", UnitPrice: 18m, Category: category);

            Assert.Equal("Test6", product.ProductName);
            Assert.Equal(category.CategoryID, product.CategoryID);
            category = _db.Category.WithProducts().FindByCategoryName("Test5");
            Assert.True(category.Products.Count == 1);
        }

        [Fact]
        public void InsertProductObjectWithCategoryByAssociation()
        {
            var category = _db.Categories.Insert(CategoryName: "Test7");
            var productRecord = new { ProductName = "Test8", UnitPrice = 18m, Category = category};
            var product = _db.Products.Insert(productRecord);

            Assert.Equal("Test8", product.ProductName);
            Assert.Equal(category.CategoryID, product.CategoryID);
            category = _db.Category.WithProducts().FindByCategoryName("Test7");
            Assert.True(category.Products.Count == 1);
        }
    }
}
